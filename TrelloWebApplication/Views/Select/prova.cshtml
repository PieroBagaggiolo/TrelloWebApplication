@using TrelloWebApplication.Models;
@model IEnumerable<TrelloWebApplication.Models.Card>
@{
    ViewBag.Title = "Gestine Listino";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <style type="text/css">
        select {
            height: 800px;
        }

        .list {
            height: 300px;
            width: 200px;
            padding: 10px;
            border: 3px solid black;
            font-size: 1.5em;
            font-weight: bold;
        }

        .list-values {
            height: 300px;
            width: 250px;
            padding: 10px;
            margin: 0 0 0 10px;
            border: 3px solid black;
        }

        .list-enabled {
            color: red;
        }

        .list-disabled {
            color: grey;
        }

        #StatoId {
            height: 50px;
        }
    </style>
</head>
@Html.DropDownList("Stato", null, new { @id = "StatoId" });


<!-- Listbox relativo ai prodotti -->
<div style="text-align: right; float: left; width: 45%; margin-top: 20px">
    <div class="title1">Prodotti in Fatto</div>
    <div>
        @{

            List<Card> products = Model.ToList();

            @*rimuove dalla lista dei prodotti quelli gi' presenti all'interno del listino*@

        }
        <div style="display: none">
            @Html.ListBox("lbprodid", new MultiSelectList(Model.Select(g => g.Id).ToList()))
        </div>
        @Html.ListBox("lbproducts", new MultiSelectList(products.Select(g => g.Name).ToList()), new { @class = "list" })
    </div>
</div>
<!-- Bottoni Add e Remove -->
<div style="text-align: center; float: left; width: 10%; margin-top: 140px">
    <div>
        @*@using (Html.BeginForm("Add"))
            {*@
        <input type="button" id="BtnAdd" name="AddProduct" value="&gt;" class="button1" onclick="Add()" />
        @*}*@
    </div>
    <div>
        @*@using (Html.BeginForm("Remove"))
            {*@
        <input type="button" id="BtnRemove" name="RemoveProduct" value="&lt;" class="button1" onclick="Remove()" />
        @*}*@
    </div>
</div>
<!-- Listbox relativo al listino -->

<div style="text-align: left; float: right; width: 45%; margin-top: 20px">
    <div class="title2">Prodotti In esecuzione</div>
    <div>
        <div style="display: none">
            @*// mantienbe due liste parallele, contenenti rispettivamente gli id di prodotto, e i codici di prodotto relativi al listino specifico
                // la prirma lista e' hidden*@



            @{
                List<Card> prova = new List<Card>();

                @*rimuove dalla lista dei prodotti quelli gi' presenti all'interno del listino*@

            }
            @Html.ListBox("lbprodplid", new MultiSelectList(prova.Select(g => g.Id).ToList()))
            @*@Html.ListBox("lbprodplid", new MultiSelectList(Model.Proddata.Products.Select(g => g.id).ToList()))*@
        </div>
        <div>
            @*//int ll = ViewBag.Listino;*@
            @Html.ListBox("lbprodpl", new MultiSelectList(prova.Select(g => g.Name).ToList()), new { @class = "list" })
            @*@Html.ListBox("lbprodpl", new MultiSelectList(Model.Proddata.Products.Select(g => g.codice).ToList()), new {@class = "list"})*@
        </div>
        @*@using (Html.BeginForm("Update"))
            {*@
        <div style="padding: 5px 0 0 0px; clear: left; width: 200px">
            <input type="button" id="BtnSave" name="UpdatePricelist" value="Salva listino" style="width: 200px" />
        </div>
        @*}*@
    </div>
</div>


<p>
    @Html.ActionLink("Back to List", "Index","Card")

</p>
<script>
    function addLoadEvent(func) {
        var oldonload = window.onload;
        if (typeof window.onload != "function") {
            window.onload = func;
        }
        else {
            window.onload = function () {
                if (oldonload) {
                    oldonload();
                }
                func();
            };
        }
    }

    addLoadEvent(function () {
        // inserire qui il codice da eseguire al caricamento della pagina
    });

    // chiamata al completamento del caricamento della pagina.
    $(function () {
        try {
            //alert("qua");
        } catch (e) {
            alert(e.message);
        }
    });


    function Add() {
        // deve leggere gli elementi selezionati della listbox dei prodotti
        // e poi muoverli nella listbox contenente i prodotti per listino.
        var selcode = [];       // array contenente i codici prodotti selezionati dalla listbox
        var selid = [];         // array contnente gli id prodotti relativi ai codici selezionati
        var s = document.getElementById("lbprodid");        // listbox degli id
        var s1 = document.getElementById("lbproducts");     // listbox dei codici
        var s2 = document.getElementById("lbprodplid");     // listbox degli id relativi ai prodotti contenuti nel listino (hidden)
        var s3 = document.getElementById("lbprodpl");       // listbox dei codici relativi ai prodotti del listino

        //var s = $("#lbprodid")[0];         // listbox degli id
        //var s1 = $("#lbproducts")[0];      // listbox dei codici
        //var s2 = $("#lbprodplid")[0];      // listbox degli id relativi ai prodotti contenuti nel listino (hidden)
        //var s3 = $("#lbprodpl")[0];        // listbox dei codici relativi ai prodotti del listino


        // in selcode e in selid soltanto i codici e i relativi id selezionati
        var numel = s1.options.length;
        var i;
        for (i = 0; i < numel; i++) {
            if (s1.options[i].selected) {
                selcode.push(s1.options[i].text);
                selid.push(s.options[i].text);
            }
        }
        // traduzione -> jquery
        //$("#lbproducts > option").each(function (index) {
        //    if (this.selected) {
        //        selcode.push(this.text);
        //        selid.push(s.options[index].text);
        //    }
        //});

        // aggiunge i prodotti al listino, toglie dalla lista dei prodotti disponibili
        for (i = 0; i < selid.length; i++) {
            var option = document.createElement("option");
            var option1 = document.createElement("option");

            // aggliunge gli elementi ai tag destinazione
            option.text = selcode[i];
            s3.add(option);
            option1.text = selid[i];
            s2.add(option1);

            // rinuove gli elementi dai tag sorgente
            if ((index = indexMatchingText(s1, option.text)) >= 0)
                s1.remove(index);
            if ((index = indexMatchingText(s, option1.text)) >= 0) {
                s.remove(index);
            }
        }
    };


    function Remove() {
        // inverso di BtnAdd
        // deve leggere gli elementi selezionati della listbox  contenente i prodotti per il listino
        // e poi muoverli nelle listbox contenente i prodotti.
        // deve leggere gli elementi selezionati della listbox dei prodotti
        // e poi muoverli nella listbox contenente i prodotti per listino.
        var selcode = [];       // array contenente i codici prodotti selezionati dalla listbox
        var selid = [];         // array contnente gli id prodotti relativi ai codici selezionati
        var s = document.getElementById("lbprodid");        // listbox degli id
        var s1 = document.getElementById("lbproducts");     // listbox dei codici
        var s2 = document.getElementById("lbprodplid");     // listbox degli id relativi ai prodotti contenuti nel listino (hidden)
        var s3 = document.getElementById("lbprodpl");       // listbox dei codici relativi ai prodotti del listino

        //var s = $("#lbprodid")[0];        // listbox degli id
        //var s1 = $("#lbproducts")[0];     // listbox dei codici
        //var s2 = $("#lbprodplid")[0];     // listbox degli id relativi ai prodotti contenuti nel listino (hidden)
        //var s3 = $("#lbprodpl")[0];       // listbox dei codici relativi ai prodotti del listino

        // in selcode e in selid soltanto i codici e i relativi id selezionati
        var numel = s3.options.length;
        var i;
        for (i = 0; i < numel; i++) {
            if (s3.options[i].selected) {
                selcode.push(s3.options[i].text);
                selid.push(s2.options[i].text);
            }
        }

        // aggiunge i prodotti al listino, toglie dalla lista dei prodotti disponibili
        for (i = 0; i < selid.length; i++) {
            var option = document.createElement("option");
            var option1 = document.createElement("option");

            // aggliunge gli elementi ai tag destinazione
            option.text = selcode[i];
            s1.add(option);
            option1.text = selid[i];
            s.add(option1);

            // rinuove gli elementi dai tag sorgente
            if ((index = indexMatchingText(s3, option.text)) >= 0)
                s3.remove(index);
            if ((index = indexMatchingText(s2, option1.text)) >= 0) {
                s2.remove(index);
            }
        }
    };






    // Ritorna soltanto l'url del controller. Utilizzato per costruire una nuova
    // chiamata a una action dello stesso controller, via javascript
    function SetupBaseRoute(partialpath) {
        try {
            var result = "";
            var index;
            if (partialpath == "/") {
                result = "../../Home";
            }
            else {
                while (1) {
                    if ((index = partialpath.lastIndexOf("/")) == 0) {
                        result = "../.." + partialpath;
                        break;
                    }
                    else if (index > 0) {
                        partialpath = partialpath.substring(0, index);
                    }
                    else {
                        alert("errore: partialpath=" + partialpath);
                        break;
                    }
                }
            }
            return result;
        } catch (e) {
            alert(e.message);
        }
    }

    // trova il testo all'interno dell'elemento, e ne restituisce l'indice
    function indexMatchingText(ele, text) {
        for (var i = 0; i < ele.length; i++) {
            if (ele[i].childNodes[0].nodeValue === text) {
                return i;
            }
        }
        return -1;

    }

    // forza il reload della pagina
    function PageReload() {
        window.location.href = window.location.href;
    }
</script>