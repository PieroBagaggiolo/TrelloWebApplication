@model IEnumerable<TrelloWebApplication.Models.Card>
@{List<String> idList = new List<String>();}
@{
    ViewBag.Title = "Filter";
}

<div class="jumbotron" style="background:rgba(255, 255, 255, 0.4)">
    <h1 style="text-align:center">TRELLO REPORTER APP</h1>
</div>
<div>
    <h1>Trello's Board Cards List Filter</h1>
    <p>
        Lista dell cards presenti nella bacheca di Trello
    </p>
    <p>
        - Per filtrare le card selezionare la list e/o archivied per i quali si vuole filtrare e premere il tasto Filter 
    </p>
    <p>
        - Il tasto sposta serve per andare nella scermata spostamento di massa con le carte filtrate
    </p>
    <p>
        - Go to Home per tornare alla scermata inziale
    </p>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <table  id="tb2">


        <tr>
            @*<th>
                    @Html.DropDownList("Campo", "ALL")
                </th>*@
            <th>
                <h4> LIST : @Html.DropDownList("stato", "ALL ")</h4>
            </th>
            <th>
                <h4>ARCHVIED : @Html.DropDownList("closed", "ALL ")</h4>
            </th>
            <th>
                <input type="submit" value="Filter" class="btn btn-info" />
            </th>
        </tr>
    </table>

    <br />

    <table class="table" id="tb1">
        <tr>
            <th style="text-align:center">
                TRELLO'S CARDS LIST
            </th>
            <th>LIST</th>
            <th>ARCHVIED</th>
            <th>Expiration date</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr class="rowHover">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdList)
                </td>
                @if (item.Closed=="True")
                {
                    <td>YES</td>
                }
                else
                {
                    <td>NO</td>
                }

                @if (item.Due!=null)
                {
                <td>
                    @Html.DisplayFor(modelItem => item.Due)
                </td>
                }
                else
                {
                <td>

                   Not Present
                </td>
                }
            </tr>

            idList.Add(item.Id);

        }
    </table>
    <table style="width:80%; margin-left:10%; ">
        <tr>
            <th>
                                <a href="/" class="btn btn-primary btn-large">Go To Home</a>


            </th>
            <th> @Html.ActionLink("PRINT PDF", "ExportPDFIndex", new { lstString = Json.Encode(idList) }, new {  @class = "btn btn-danger btn-large" })</th>
            <th>@Html.ActionLink("PRINT EXCEL", "ExcelExIndex", new { lstString = Json.Encode(idList) }, new {  @class = "btn btn-success btn-large" })</th>
            <th> @Html.ActionLink("SPOSTA", "Sposta", new { lstString = Json.Encode(idList) }, new {  @class = "btn btn-info btn-large" })</th>

        </tr>
    </table>
    @*@Html.ActionLink("PRINT PDF", "ExportPDFIndex", "Filter", Model, null)*@
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
